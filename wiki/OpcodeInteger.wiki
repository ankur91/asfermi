#summary opcodes for integer operation instructions

Note: round brackets, instead of square brackets, are used to represent an optional component. This is to avoid confusion with memory operands which are surrounded by square brackets.

Also, [Opcode#imme immea] and [SourceFormat#Composite_operand composite operand] may be mentioned in the parts below. Please visit these two links for more information regarding their meaning.

=== Integer Instructions ===
==== IADD ====
Instruction usage:
{{{
IADD reg0, reg1, (-)composite operand;
}}}
If the composite operand is an immediate value, it cannot be longer than 20 bits (cannot be negative).

Template opcode:
{{{
1100 000000 1110 000000 000000 0000000000000000000000 0000000000 010010
                   reg0   reg1                  immea
}}}

==== IMUL ====
Instruction Usage
{{{
IMUL(.U32/S32)(.U32/.S32)(.HI) reg0, reg1, composite operand;
}}}

Template opcode:
{{{
1100 010100 1110 000000 000000 0000000000000000000000 00 00000000 001010
        mod        reg0   reg1                  immea
}}}
||mod bit|| meaning||
||3      ||0: .U32, first modifier||
||       ||1: .S32, first modifier||
||4      ||0: .LO default         ||
||       ||1: .HI                 ||
||5      ||0: .U32, second modifier||
||       ||1: .S32, second modifier||

==== ISETP ====
Template opcode:
{{{
1100 010000 1110 111 000 000000 0000000000000000000000 0 1110 000000 11000
}}}
Please see [OpcodeFloat#FSETP FSETP] for more information. Note that .NUM, .NAN and all the comparators suffixed with U are not supported by ISETP.